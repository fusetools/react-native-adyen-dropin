{"version":3,"sources":["index.ts"],"names":["NativeModules","RESULT_CODE","AdyenDropInModule","isCancelledError","err","Error","message","isSuccessResult","result","resultCode","toLowerCase","cancelled","refused","error","errorCode","trimStartingSlash","str","charAt","substr","cleanModuleConfig","dirtyModuleConfig","endpoints","makePayment","makeDetailsCall","cleanPaymentMethodsResponse","dirtyPaymentMethodsResponse","paymentMethods","AdyenDropIn","setDropInConfig","dropInConfig","setModuleConfig","moduleConfig","cleanedModuleConfig","callbacks","setSubmitCallback","onSubmit","setAdditionalDetailsCallback","onAdditionalDetails","setPaymentResponse","paymentResponse","setDetailsResponse","detailsResponse","start","paymentMethodsResponse","Promise","resolve","reject","cleanedPaymentMethodsResponse","resolveCallback","jsonStr","parsed","JSON","parse","rejectCallback","msgOrJsonStr","parsedEntries","Object","entries","hasOnlyMessage","length","refusalReason","forEach","key","value","defineProperty"],"mappings":"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","sourcesContent":["import { NativeModules } from 'react-native';\n\nexport type Amount = {\n  value: number;\n  currencyCode: string;\n};\n\nexport type CardConfiguration = {\n  showsHolderNameField: boolean;\n  showsStorePaymentMethodField: boolean;\n  showsSecurityCodeField: boolean;\n};\n\nexport type ApplePayConfiguration = {\n  /** Label to show instead of \"Total\" */\n  label?: string;\n  amount?: Amount;\n  configuration?: {\n    /** Name to be displayed on the form */\n    merchantName?: string;\n    /** Your Apple merchant identifier */\n    merchantId: string;\n  };\n};\n\nexport type DropInConfiguration = {\n  clientKey: string;\n  environment: 'test' | 'live';\n  countryCode: string;\n  amount: Amount;\n  card?: CardConfiguration;\n  applePay?: ApplePayConfiguration;\n  returnUrl?: string;\n};\n\nexport type ModuleConfig = {\n  /**\n   * *Required* base URL ending with \"/\"\n   * @example\n   * \"http://server.com/api/\"\n   */\n  baseUrl: string;\n  /**\n   * Set to `true` to view more native logs\n   */\n  debug?: boolean;\n  /** Optional custom headers to add to requests */\n  headers?: {\n    [key: string]: string;\n  };\n  /** Optional custom endpoints */\n  endpoints?: {\n    /**\n     * Full payment URL to call, with or without \"/\" at beginning\n     * @example\n     * \"/payments\"\n     * @example\n     * \"payments\"\n     */\n    makePayment: string;\n    /**\n     * Full details URL to call, with or without \"/\" at beginning\n     * @example\n     * \"/details\"\n     * @example\n     * \"details\"\n     */\n    makeDetailsCall: string;\n  };\n  /** Optional custom callbacks */\n  callbacks?: {\n    onSubmit: (data: any) => void;\n    onAdditionalDetails: (data: any) => void;\n  };\n};\n\nexport type PaymentMethod = {\n  [key: string]: [value: string];\n};\n\nexport type PaymentMethodsResponse = {\n  paymentMethods?: [PaymentMethod];\n};\n\nexport type PaymentResult = {\n  additionalData?: any;\n  message?: string;\n  errorCode?: string;\n  resultCode?: string;\n  refusalReason?: string;\n  refusalReasonCode?: string;\n};\n\nexport type PaymentPromise = Promise<PaymentResult>;\n\nexport enum RESULT_CODE {\n  cancelled = 'cancelled',\n  refused = 'refused',\n  error = 'error',\n  received = 'received',\n}\n\nexport const AdyenDropInModule = NativeModules.AdyenDropInModule;\n\nexport function isCancelledError(err: unknown): boolean {\n  if (err instanceof Error) {\n    return err.message === 'Cancelled';\n  }\n\n  return err === 'Cancelled';\n}\n\n/**\n * Check if a payment result is considered successful\n * @param result Resolved payment promise result\n * @returns Whether or not the result is considered successful\n */\nexport function isSuccessResult(result: PaymentResult): boolean {\n  if (typeof result.resultCode === 'string') {\n    switch (result.resultCode.toLowerCase?.()) {\n      case RESULT_CODE.cancelled:\n      case RESULT_CODE.refused:\n      case RESULT_CODE.error:\n        return false;\n\n      default:\n        return true;\n    }\n  }\n\n  if (result.errorCode) return false;\n\n  return false;\n}\n\nfunction trimStartingSlash(str?: string): string {\n  if (str && str.charAt(0) === '/') {\n    return str.substr(1);\n  }\n\n  return str ?? '';\n}\n\nfunction cleanModuleConfig(dirtyModuleConfig: ModuleConfig): ModuleConfig {\n  return {\n    ...dirtyModuleConfig,\n    ...(dirtyModuleConfig.endpoints\n      ? {\n          endpoints: {\n            makePayment: trimStartingSlash(\n              dirtyModuleConfig.endpoints.makePayment\n            ),\n            makeDetailsCall: trimStartingSlash(\n              dirtyModuleConfig.endpoints.makeDetailsCall\n            ),\n          },\n        }\n      : {}),\n  };\n}\n\nfunction cleanPaymentMethodsResponse(\n  dirtyPaymentMethodsResponse: PaymentMethodsResponse\n): PaymentMethodsResponse {\n  if (dirtyPaymentMethodsResponse.paymentMethods) {\n    return dirtyPaymentMethodsResponse;\n  }\n\n  return {\n    paymentMethods: dirtyPaymentMethodsResponse as PaymentMethod[],\n  } as PaymentMethodsResponse;\n}\n\nconst AdyenDropIn = {\n  /**\n   * ***Required*** Call this function with a drop-in settings before calling `start()`\n   * @param dropInConfig Configuration object\n   * @returns `AdyenDropIn` instance (`this`)\n   */\n  setDropInConfig(dropInConfig: DropInConfiguration) {\n    AdyenDropInModule.setDropInConfig(dropInConfig);\n    return this;\n  },\n  /**\n   * ***Required*** Call this function to set additional settings for the RN module\n   * @param moduleConfig Configuration object\n   * @returns `AdyenDropIn` instance (`this`)\n   */\n  setModuleConfig(moduleConfig: ModuleConfig) {\n    const cleanedModuleConfig = cleanModuleConfig(moduleConfig);\n    AdyenDropInModule.setModuleConfig(cleanedModuleConfig);\n    if (moduleConfig.callbacks) {\n      AdyenDropInModule.setSubmitCallback(moduleConfig.callbacks.onSubmit);\n      AdyenDropInModule.setAdditionalDetailsCallback(\n        moduleConfig.callbacks.onAdditionalDetails\n      );\n    }\n    return this;\n  },\n  /**\n   * ***Optional*** Call this function to set payment response for the RN module\n   * @param paymentResponse Payment response object\n   * @returns `AdyenDropIn` instance (`this`)\n   */\n  setPaymentResponse(paymentResponse: any) {\n    AdyenDropInModule.setPaymentResponse(paymentResponse);\n    return this;\n  },\n  /**\n   * ***Optional*** Call this function to set details response for the RN module\n   * @param detailsResponse Details response object\n   * @returns `AdyenDropIn` instance (`this`)\n   */\n  setDetailsResponse(detailsResponse: any) {\n    AdyenDropInModule.setDetailsResponse(detailsResponse);\n    return this;\n  },\n  /**\n   * Call this function to show the drop-in and start the payment flow\n   * @param paymentMethodsResponse Payment methods response object\n   * @returns Promise that resolves with payment result if payment finished without errors\n   */\n  start(paymentMethodsResponse: PaymentMethodsResponse): PaymentPromise {\n    return new Promise((resolve, reject) => {\n      if (!paymentMethodsResponse) {\n        return reject(new Error('Missing paymentMethodsResponse argument'));\n      }\n\n      const cleanedPaymentMethodsResponse = cleanPaymentMethodsResponse(\n        paymentMethodsResponse\n      );\n\n      const resolveCallback = (jsonStr: string) => {\n        try {\n          const parsed = JSON.parse(jsonStr);\n          return resolve(parsed);\n        } catch {\n          return reject(\n            new Error('Failed to parse JSON from native resolve callback')\n          );\n        }\n      };\n\n      const rejectCallback = (msgOrJsonStr?: string) => {\n        if (msgOrJsonStr) {\n          try {\n            const parsed = JSON.parse(msgOrJsonStr);\n            const parsedEntries = Object.entries(parsed);\n            const hasOnlyMessage =\n              parsedEntries.length === 1 &&\n              typeof parsed.message === 'string' &&\n              parsed.message.length > 0;\n\n            if (hasOnlyMessage) {\n              return reject(new Error(parsed.message));\n            } else {\n              const { message } = parsed;\n              const error = new Error(\n                message ?? parsed.refusalReason ?? 'Unknown error'\n              );\n              parsedEntries.forEach(([key, value]) => {\n                Object.defineProperty(error, key, { value });\n              });\n              return reject(error);\n            }\n          } catch {}\n        }\n        return reject(new Error(msgOrJsonStr ?? 'Unknown error'));\n      };\n\n      try {\n        AdyenDropInModule.start(\n          cleanedPaymentMethodsResponse,\n          resolveCallback,\n          rejectCallback\n        );\n      } catch (err) {\n        return reject(err);\n      }\n    });\n  },\n};\n\nexport default AdyenDropIn;\n"]}